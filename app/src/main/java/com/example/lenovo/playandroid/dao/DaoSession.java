package com.example.lenovo.playandroid.dao;

import java.util.Map;

import org.greenrobot.greendao.AbstractDao;
import org.greenrobot.greendao.AbstractDaoSession;
import org.greenrobot.greendao.database.Database;
import org.greenrobot.greendao.identityscope.IdentityScopeType;
import org.greenrobot.greendao.internal.DaoConfig;

import com.example.lenovo.playandroid.dao.HistoryData;
import com.example.lenovo.playandroid.dao.LogDaoBean;
import com.example.lenovo.playandroid.dao.DecisionGlide;

import com.example.lenovo.playandroid.dao.HistoryDataDao;
import com.example.lenovo.playandroid.dao.LogDaoBeanDao;
import com.example.lenovo.playandroid.dao.DecisionGlideDao;

// THIS CODE IS GENERATED BY greenDAO, DO NOT EDIT.

/**
 * {@inheritDoc}
 * 
 * @see org.greenrobot.greendao.AbstractDaoSession
 */
public class DaoSession extends AbstractDaoSession {

    private final DaoConfig historyDataDaoConfig;
    private final DaoConfig logDaoBeanDaoConfig;
    private final DaoConfig decisionGlideDaoConfig;

    private final HistoryDataDao historyDataDao;
    private final LogDaoBeanDao logDaoBeanDao;
    private final DecisionGlideDao decisionGlideDao;

    public DaoSession(Database db, IdentityScopeType type, Map<Class<? extends AbstractDao<?, ?>>, DaoConfig>
            daoConfigMap) {
        super(db);

        historyDataDaoConfig = daoConfigMap.get(HistoryDataDao.class).clone();
        historyDataDaoConfig.initIdentityScope(type);

        logDaoBeanDaoConfig = daoConfigMap.get(LogDaoBeanDao.class).clone();
        logDaoBeanDaoConfig.initIdentityScope(type);

        decisionGlideDaoConfig = daoConfigMap.get(DecisionGlideDao.class).clone();
        decisionGlideDaoConfig.initIdentityScope(type);

        historyDataDao = new HistoryDataDao(historyDataDaoConfig, this);
        logDaoBeanDao = new LogDaoBeanDao(logDaoBeanDaoConfig, this);
        decisionGlideDao = new DecisionGlideDao(decisionGlideDaoConfig, this);

        registerDao(HistoryData.class, historyDataDao);
        registerDao(LogDaoBean.class, logDaoBeanDao);
        registerDao(DecisionGlide.class, decisionGlideDao);
    }
    
    public void clear() {
        historyDataDaoConfig.clearIdentityScope();
        logDaoBeanDaoConfig.clearIdentityScope();
        decisionGlideDaoConfig.clearIdentityScope();
    }

    public HistoryDataDao getHistoryDataDao() {
        return historyDataDao;
    }

    public LogDaoBeanDao getLogDaoBeanDao() {
        return logDaoBeanDao;
    }

    public DecisionGlideDao getDecisionGlideDao() {
        return decisionGlideDao;
    }

}
